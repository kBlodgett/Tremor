/**
 * LowIntense: finds the lowest intensity tremor and prints out low tremor array.
 * 
 * @author Kirjsten Blodgett 
 * @version 1.0
 * email: catsanddogskb@hotmail.com
 */
import java.io.*;
import java.util.Scanner;
import java.util.*;
public class LowIntense
{
    private List<DataPerMin>  lowTremor = new ArrayList<DataPerMin>();
    private double vec = 999999999;
    private int HR = 999;

    /**
     * Constructor for objects of class LowIntense
     */
    public LowIntense(List tremorList)
    {
        lowTremor = tremorList;
    }

    /**
     * calculates the lowest HR and vec that occured
     */
    public void lowest()
    {
        DataPerMin low;
        for(int i = 0; lowTremor.size() > i; i++)
        {
            low = (DataPerMin) lowTremor.get(i);
            if(low.HR() < HR)
            {HR = low.HR();}
            
            if(low.vec() < vec)
            {vec = low.vec();}
        }
        
        System.out.println(" ");
        System.out.println("Stats");
        System.out.println("Lowest: (Given the thresh hold: HR - 100    Vector Magnitude - 3500)");
        if((HR < 999)&&(vec < 999999))
        {   System.out.println("    HR - " + HR);
            System.out.println("    Vector Magnitude - " + vec);
        }else
        {
        }
    }

    /**
     * prints out the array list of lowest intensity tremors
     */
    public void print()
    {
        DataPerMin low;
        System.out.println();
        System.out.printf("%-10s %-10s %-5s %-20s %n", "Intensity", "End Time", "HR", "Vector Magnitude");
        for(int i = 0; lowTremor.size() > i; i++)
        {
            low = (DataPerMin) lowTremor.get(i);
            System.out.printf("%-10s %-10s %-5s %-20s %n","Low", low.time(), low.HR(), low.vec());
        }
        
    }
}
