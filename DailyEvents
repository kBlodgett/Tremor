package tremornetbeans;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Kirjsten
 */
public class DailyEvents extends javax.swing.JFrame {
    
    String tremStr = ("Date\tTremors\tMean HR\tMin HR\tMax HR\tMean Movement\tMin Movement\tMax Movement\tMean Length\tMin Length\tMax Length\n");

    List<TremorDays> tremorDays;
    /**
     * Creates new form DailyEvents
     */
    public DailyEvents(List trems) {
        initComponents();
        tremorDays = trems;
        DecimalFormat df = new DecimalFormat("0.00");
        for(int i =0; tremorDays.size()>i; i++)
            {
                TremorDays tDays = tremorDays.get(i);
                tremStr += (tDays.date()+"\t"+tDays.count()+"\t"+df.format(Double.parseDouble(tDays.meanHR()))+"\t"+df.format(Double.parseDouble(tDays.minHR()))+"\t"+df.format(Double.parseDouble(tDays.maxHR()))+"\t"+df.format(Double.parseDouble(tDays.meanVec()))+"\t\t"+df.format(Double.parseDouble(tDays.minVec()))+"\t"+df.format(Double.parseDouble(tDays.maxVec()))+"\t"+df.format(Double.parseDouble(tDays.meanLength()))+"\t"+df.format(Double.parseDouble(tDays.minLength()))+"\t"+df.format(Double.parseDouble(tDays.maxLength()))+"\n");
            }
        dailyEventsTextArea.setText(tremStr);
        //eventsTextArea.append(tremListStr);
        dailyEventsScrollPane.setViewportView(dailyEventsTextArea);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        saveButtonFile = new javax.swing.JLabel();
        dailyEventsScrollPane = new javax.swing.JScrollPane();
        dailyEventsTextArea = new javax.swing.JTextArea();
        dailyEventsBackground = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        saveButtonFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/Save Button.png"))); // NOI18N
        saveButtonFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonFileMouseClicked(evt);
            }
        });
        getContentPane().add(saveButtonFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 80, 40));

        dailyEventsScrollPane.setBorder(null);

        dailyEventsTextArea.setColumns(20);
        dailyEventsTextArea.setRows(5);
        dailyEventsScrollPane.setViewportView(dailyEventsTextArea);

        getContentPane().add(dailyEventsScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 750, 300));

        dailyEventsBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/Daily Events Background.png"))); // NOI18N
        getContentPane().add(dailyEventsBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void saveButtonFileMouseClicked(java.awt.event.MouseEvent evt) {                                            
        PrintWriter writer;
        try {
            writer = new PrintWriter(new FileWriter("DailyEvents.csv"));
            writer.println("Date, Tremor Count, Mean HR, Min HR, Max HR, Mean Vector Magnitude, Min Vector Magnitude, Max Vector Magnitude, Mean Legnth, Min Length, Max Length");
            for(int i =0; tremorDays.size()>i; i++)
            {
                TremorDays tDays = tremorDays.get(i);
                writer.println(tDays.date()+","+tDays.count()+","+tDays.meanHR()+","+tDays.minHR()+","+tDays.maxHR()+","+tDays.meanVec()+","+tDays.minVec()+","+tDays.maxVec()+","+tDays.meanLength()+","+tDays.minLength()+","+tDays.maxLength());
            }
            writer.close();
        } catch (IOException ex) {
            Logger.getLogger(File.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane optionPane = new JOptionPane();
        optionPane.showMessageDialog(null, "File has been saved to NetBeans project folder", "File Saved", 1);
        
    }                                           


    // Variables declaration - do not modify                     
    private javax.swing.JLabel dailyEventsBackground;
    private javax.swing.JScrollPane dailyEventsScrollPane;
    private javax.swing.JTextArea dailyEventsTextArea;
    private javax.swing.JLabel saveButtonFile;
    // End of variables declaration                   
}
